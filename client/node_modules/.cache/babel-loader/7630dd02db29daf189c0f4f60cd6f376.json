{"ast":null,"code":"import _regeneratorRuntime from \"/Users/diehernandez/Workspace/gps-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/diehernandez/Workspace/gps-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/diehernandez/Workspace/gps-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/diehernandez/Workspace/gps-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport axios from 'axios';\n\nvar UsersService =\n/*#__PURE__*/\nfunction () {\n  function UsersService() {\n    _classCallCheck(this, UsersService);\n  }\n\n  _createClass(UsersService, [{\n    key: \"getVehiclesByUserID\",\n    value: function () {\n      var _getVehiclesByUserID = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(userID) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return axios.get(\"https://gps-locations-api.herokuapp.com/users/\".concat(userID, \"/vehicles\"));\n\n              case 3:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 6:\n                _context.prev = 6;\n                _context.t0 = _context[\"catch\"](0);\n                console.log(\"Error in function getDevicesByUserID. Message: \".concat(_context.t0));\n                return _context.abrupt(\"return\", null);\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 6]]);\n      }));\n\n      function getVehiclesByUserID(_x) {\n        return _getVehiclesByUserID.apply(this, arguments);\n      }\n\n      return getVehiclesByUserID;\n    }()\n  }]);\n\n  return UsersService;\n}();\n\nexport { UsersService as default };","map":{"version":3,"sources":["/Users/diehernandez/Workspace/gps-front/src/api/services/usersService.js"],"names":["axios","UsersService","userID","get","console","log"],"mappings":";;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAEqBC,Y;;;;;;;;;;;;gDACOC,M;;;;;;;uBAETF,KAAK,CAACG,GAAN,yDAA2DD,MAA3D,e;;;;;;;;AAQbE,gBAAAA,OAAO,CAACC,GAAR;iDACO,I;;;;;;;;;;;;;;;;;;;;;SAZQJ,Y","sourcesContent":["import axios from 'axios';\n\nexport default class UsersService {\n  async getVehiclesByUserID(userID) {\n    try {\n      return await axios.get(`https://gps-locations-api.herokuapp.com/users/${userID}/vehicles`);\n      // https://gps-locations-api.herokuapp.com/users/${userID}/vehicles\n      // return await new Promise(resolve => {\n      //   setTimeout(() => {\n      //     resolve([{ id: 1, value: 1, label: 'Ford' }, { id: 2, value: 2, label: 'Toyota' }]);\n      //   }, 500);\n      // });\n    } catch (error) {\n      console.log(`Error in function getDevicesByUserID. Message: ${error}`);\n      return null;\n    }\n  }\n}"]},"metadata":{},"sourceType":"module"}