{"ast":null,"code":"import _regeneratorRuntime from \"/Users/diehernandez/Workspace/gps-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _slicedToArray from \"/Users/diehernandez/Workspace/gps-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"/Users/diehernandez/Workspace/gps-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/diehernandez/Workspace/gps-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/diehernandez/Workspace/gps-front/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\n// import axios from 'axios';\nvar AlertsService =\n/*#__PURE__*/\nfunction () {\n  function AlertsService() {\n    _classCallCheck(this, AlertsService);\n  }\n\n  _createClass(AlertsService, [{\n    key: \"updateAlerts\",\n    value: function () {\n      var _updateAlerts = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(alerts) {\n        var alertsToUpdate, results;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                alertsToUpdate = [];\n                Object.entries(alerts).forEach(function (_ref) {\n                  var _ref2 = _slicedToArray(_ref, 2),\n                      key = _ref2[0],\n                      value = _ref2[1];\n\n                  // console.log(\"element: \", key, \" value: \", value);\n                  alertsToUpdate.push(new Promise(function (resolve) {\n                    setTimeout(function () {\n                      resolve({\n                        \"status\": 201\n                      });\n                    }, 500);\n                  }));\n                });\n                _context.next = 5;\n                return Promise.all(alertsToUpdate);\n\n              case 5:\n                results = _context.sent;\n\n                if (!(results.filter(function (result) {\n                  return !result.status || result.status !== 200;\n                }).length > 0)) {\n                  _context.next = 9;\n                  break;\n                }\n\n                console.error(\"Could not update alerts: \".concat(JSON.stringify(alerts), \". Results: \").concat(JSON.stringify(results)));\n                return _context.abrupt(\"return\", false);\n\n              case 9:\n                return _context.abrupt(\"return\", true);\n\n              case 12:\n                _context.prev = 12;\n                _context.t0 = _context[\"catch\"](0);\n                console.error(\"Could not update alerts: \".concat(alerts, \". Error: \").concat(_context.t0));\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 12]]);\n      }));\n\n      function updateAlerts(_x) {\n        return _updateAlerts.apply(this, arguments);\n      }\n\n      return updateAlerts;\n    }()\n  }]);\n\n  return AlertsService;\n}(); // const mock = [\n//   {\n//     \"id\": 10,\n//     \"user_id\": 10,\n//     \"device_id\": 1,\n//     \"type\": \"Ford Fiesta\",\n//     \"plate\": \"AA 383 TI\",\n//     \"model\": \"2018\"\n//   },\n//   {\n//     \"id\": 2,\n//     \"user_id\": 10,\n//     \"device_id\": 3,\n//     \"type\": \"Fiat Argo\",\n//     \"plate\": \"AB 112 II\",\n//     \"model\": \"2018\"\n//   }\n// ];\n\n\nexport { AlertsService as default };","map":{"version":3,"sources":["/Users/diehernandez/Workspace/gps-front/src/api/services/alertsService.js"],"names":["AlertsService","alerts","alertsToUpdate","Object","entries","forEach","key","value","push","Promise","resolve","setTimeout","all","results","filter","result","status","length","console","error","JSON","stringify"],"mappings":";;;;;;AAAA;IAEqBA,a;;;;;;;;;;;;gDACAC,M;;;;;;;AAEXC,gBAAAA,c,GAAiB,E;AACrBC,gBAAAA,MAAM,CAACC,OAAP,CAAeH,MAAf,EAAuBI,OAAvB,CAA+B,gBAAkB;AAAA;AAAA,sBAAhBC,GAAgB;AAAA,sBAAXC,KAAW;;AAC/C;AACAL,kBAAAA,cAAc,CAACM,IAAf,CACE,IAAIC,OAAJ,CAAY,UAAAC,OAAO,EAAI;AACrBC,oBAAAA,UAAU,CAAC,YAAM;AACfD,sBAAAA,OAAO,CAAC;AAAE,kCAAU;AAAZ,uBAAD,CAAP;AACD,qBAFS,EAEP,GAFO,CAAV;AAGD,mBAJD,CADF;AAOD,iBATD;;uBAWoBD,OAAO,CAACG,GAAR,CAAYV,cAAZ,C;;;AAAhBW,gBAAAA,O;;sBACAA,OAAO,CAACC,MAAR,CAAe,UAAAC,MAAM;AAAA,yBAAI,CAACA,MAAM,CAACC,MAAR,IAAkBD,MAAM,CAACC,MAAP,KAAkB,GAAxC;AAAA,iBAArB,EAAkEC,MAAlE,GAA2E,C;;;;;AAC7EC,gBAAAA,OAAO,CAACC,KAAR,oCAA0CC,IAAI,CAACC,SAAL,CAAepB,MAAf,CAA1C,wBAA8EmB,IAAI,CAACC,SAAL,CAAeR,OAAf,CAA9E;iDACO,K;;;iDAEF,I;;;;;AAGPK,gBAAAA,OAAO,CAACC,KAAR,oCAA0ClB,MAA1C;;;;;;;;;;;;;;;;;;;KAKN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;SA7CqBD,a","sourcesContent":["// import axios from 'axios';\n\nexport default class AlertsService {\n  async updateAlerts(alerts) {\n    try {\n      let alertsToUpdate = [];\n      Object.entries(alerts).forEach(([key, value]) => {\n        // console.log(\"element: \", key, \" value: \", value);\n        alertsToUpdate.push(\n          new Promise(resolve => {\n            setTimeout(() => {\n              resolve({ \"status\": 201 });\n            }, 500);\n          })\n        );\n      });\n      \n      let results = await Promise.all(alertsToUpdate);\n      if (results.filter(result => !result.status || result.status !== 200).length > 0) {\n        console.error(`Could not update alerts: ${JSON.stringify(alerts)}. Results: ${JSON.stringify(results)}`)\n        return false;\n      }\n      return true;\n\n    } catch (error) {\n      console.error(`Could not update alerts: ${alerts}. Error: ${error}`)\n    }\n  }\n}\n\n// const mock = [\n//   {\n//     \"id\": 10,\n//     \"user_id\": 10,\n//     \"device_id\": 1,\n//     \"type\": \"Ford Fiesta\",\n//     \"plate\": \"AA 383 TI\",\n//     \"model\": \"2018\"\n//   },\n//   {\n//     \"id\": 2,\n//     \"user_id\": 10,\n//     \"device_id\": 3,\n//     \"type\": \"Fiat Argo\",\n//     \"plate\": \"AB 112 II\",\n//     \"model\": \"2018\"\n//   }\n// ];"]},"metadata":{},"sourceType":"module"}